name: Auto Update Days Delayed

on:
  schedule:
    - cron: "0 5 * * *"  # Runs every day at 5 AM UTC (10:30 AM IST)
  workflow_dispatch:      # Allows manual trigger from Actions tab

jobs:
  update-delays:
    runs-on: ubuntu-latest

    steps:
      - name: Update Days Delayed in GitHub Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectId = "R_kgDOQIXq8w";  // Your Project ID
            const fieldDaysDelayed = "Days Delayed";
            const fieldDueDate = "Due Date";
            const fieldStatus = "Status";

            const today = new Date();

            // Fetch items from the project
            const query = `
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    items(first: 100) {
                      nodes {
                        id
                        fieldValues(first: 20) {
                          nodes {
                            ... on ProjectV2ItemFieldDateValue {
                              field { ... on ProjectV2FieldCommon { name id } }
                              date
                            }
                            ... on ProjectV2ItemFieldNumberValue {
                              field { ... on ProjectV2FieldCommon { name id } }
                              number
                            }
                            ... on ProjectV2ItemFieldSingleSelectValue {
                              field { ... on ProjectV2FieldCommon { name id } }
                              name
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;

            const data = await github.graphql(query, { projectId });
            const items = data.node.items.nodes;

            for (const item of items) {
              let dueDateField, daysDelayedField, statusField;
              let dueDateValue, statusValue;

              for (const f of item.fieldValues.nodes) {
                if (f.field?.name === fieldDueDate) {
                  dueDateField = f.field.id;
                  dueDateValue = f.date ? new Date(f.date) : null;
                }
                if (f.field?.name === fieldDaysDelayed) {
                  daysDelayedField = f.field.id;
                }
                if (f.field?.name === fieldStatus) {
                  statusField = f.field.id;
                  statusValue = f.name;
                }
              }

              if (dueDateValue && dueDateValue < today && statusValue !== "Done") {
                const days = Math.floor((today - dueDateValue) / (1000 * 60 * 60 * 24));
                console.log(`Updating ${item.id}: ${days} days delayed`);

                await github.graphql(`
                  mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Float!) {
                    updateProjectV2ItemFieldValue(
                      input: {
                        projectId: $projectId,
                        itemId: $itemId,
                        fieldId: $fieldId,
                        value: { number: $value }
                      }
                    ) { clientMutationId }
                  }
                `, {
                  projectId,
                  itemId: item.id,
                  fieldId: daysDelayedField,
                  value: days
                });
              }
            }

            console.log("âœ… Days Delayed updated successfully.");
